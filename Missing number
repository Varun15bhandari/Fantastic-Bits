 ### Brute ###
class GfG {
    static int missingNumber(int[] arr) {
        int n = arr.length + 1;

        // Create hash array of size n+1
        int[] hash = new int[n + 1];

        // Store frequencies of elements
        for (int i = 0; i < arr.length; i++) {
            hash[arr[i]]++;
        }

        // Find the missing number
        for (int i = 1; i <= n; i++) {
            if (hash[i] == 0) {
                return i;
            }
        }
        return -1;
    }

### optimal ###

class Solution {
    public int missingNumber(int[] nums) {
        int xor1=0;
        int xor2=0;
        for(int i=0;i<nums.length;i++){
            xor1=xor1^nums[i];
        }
        for(int i=1;i<=nums.length;i++){
            xor2=xor2^i;
        }

        return xor1^xor2;
    }
}
